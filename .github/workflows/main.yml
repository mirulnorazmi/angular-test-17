name: CI/CD - Build and Deploy Angular App via Fleet

on:
  push:
    branches:
      - main        # ‚úÖ Trigger automatically on push to main
  workflow_dispatch: # ‚úÖ Allow manual trigger

env:
  IMAGE_NAME: angular-test
  REGISTRY_URL: registry.smolelab.com
  IMAGE_TAG: ${{ github.sha }}   # ‚úÖ Short SHA for traceability

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & Build Angular
        run: |
          npm ci
          npm run build -- --configuration production

      - name: Log in to Private Docker Registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ env.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker Image
        run: docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # ==================================================================
      # CD: Trigger Fleet by updating deployment manifest in GitOps repo
      # ==================================================================

      # üß© Step 7: Checkout Fleet GitOps repo
      - name: Checkout Fleet Repo
        uses: actions/checkout@v4
        with:
          repository: smolelab/fleet-gitops-repo     # Replace with your actual repo
          token: ${{ secrets.FLEET_GIT_PAT }}         # PAT with write access
          path: fleet-repo

      # üìù Step 8: Update deployment image tag in Kubernetes manifest
      - name: Update Deployment Image Tag
        run: |
          DEPLOYMENT_FILE="./fleet-repo/deploy/deployment.yaml"
          echo "Updating image to ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          sed -i "s|image: .*/${{ env.IMAGE_NAME }}:.*|image: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}|g" ${DEPLOYMENT_FILE}
          cd fleet-repo
          git diff

      # ‚öôÔ∏è Step 9: Commit and push to trigger Fleet
      - name: Commit and Push Updated Manifests
        run: |
          cd fleet-repo
          git config user.name "Fleet CI Bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git add deploy/deployment.yaml
          if git status --porcelain | grep -q 'deploy/deployment.yaml'; then
            git commit -m "üöÄ Deploy ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            git push
          else
            echo "No changes to commit ‚Äî skipping."
          fi
